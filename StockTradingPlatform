import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

class Stock {
    private String symbol;
    private double price;

    public Stock(String symbol, double price) {
        this.symbol = symbol;
        this.price = price;
    }

    public String getSymbol() {
        return symbol;
    }

    public double getPrice() {
        return price;
    }
}

class Market {
    private List<Stock> stocks;

    public Market() {
        stocks = new ArrayList<>();
    }

    public void addStock(Stock stock) {
        stocks.add(stock);
    }

    public List<Stock> getStocks() {
        return stocks;
    }
}

class User {
    private String name;
    private double balance;
    private Map<Stock, Integer> portfolio;

    public User(String name, double balance) {
        this.name = name;
        this.balance = balance;
        this.portfolio = new HashMap<>();
    }

    public void buyStock(Stock stock, int quantity) {
        double totalCost = stock.getPrice() * quantity;
        if (balance >= totalCost) {
            balance -= totalCost;
            portfolio.put(stock, portfolio.getOrDefault(stock, 0) + quantity);
            System.out.println(name + " bought " + quantity + " shares of " + stock.getSymbol());
        } else {
            System.out.println("Insufficient balance to buy " + quantity + " shares of " + stock.getSymbol());
        }
    }

    public void sellStock(Stock stock, int quantity) {
        if (portfolio.getOrDefault(stock, 0) >= quantity) {
            portfolio.put(stock, portfolio.get(stock) - quantity);
            balance += stock.getPrice() * quantity;
            System.out.println(name + " sold " + quantity + " shares of " + stock.getSymbol());
        } else {
            System.out.println("Not enough shares to sell " + quantity + " shares of " + stock.getSymbol());
        }
    }

    public void printPortfolio() {
        System.out.println(name + "'s Portfolio:");
        portfolio.forEach((stock, quantity) -> {
            System.out.println(stock.getSymbol() + ": " + quantity + " shares");
        });
        System.out.println("Remaining balance: $" + balance);
    }
}

public class StockTradingPlatform {
    public static void main(String[] args) {
        Market market = new Market();
        User user = new User("TraderJoe", 10000.00);
        
        // Adding stocks to the market
        market.addStock(new Stock("AAPL", 150.00));
        market.addStock(new Stock("GOOGL", 2800.00));
        market.addStock(new Stock("AMZN", 3400.00));
        
        // Buying stocks
        Stock apple = market.getStocks().get(0);
        user.buyStock(apple, 10); // Buy 10 AAPL
        user.printPortfolio();
        
        // Selling stocks
        user.sellStock(apple, 5); // Sell 5 AAPL
        user.printPortfolio();
    }
}
